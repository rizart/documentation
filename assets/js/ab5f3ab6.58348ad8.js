(window.webpackJsonp=window.webpackJsonp||[]).push([[244],{314:function(e,n,r){"use strict";r.r(n),r.d(n,"frontMatter",(function(){return i})),r.d(n,"metadata",(function(){return u})),r.d(n,"toc",(function(){return s})),r.d(n,"default",(function(){return p}));var t=r(3),o=r(7),a=(r(0),r(457)),c=["components"],i={title:"rucio-abacus-rse"},u={unversionedId:"bin/rucio-abacus-rse",id:"bin/rucio-abacus-rse",isDocsHomePage:!1,title:"rucio-abacus-rse",description:"`",source:"@site/../docs/bin/rucio-abacus-rse.md",sourceDirName:"bin",slug:"/bin/rucio-abacus-rse",permalink:"/documentation/bin/rucio-abacus-rse",editUrl:"https://github.com/rucio/documentation/tree/main/docs/../docs/bin/rucio-abacus-rse.md",version:"current",frontMatter:{title:"rucio-abacus-rse"},sidebar:"docs",previous:{title:"rucio-abacus-collection-replica",permalink:"/documentation/bin/rucio-abacus-collection-replica"},next:{title:"rucio-admin",permalink:"/documentation/bin/rucio-admin"}},s=[],l={toc:s};function p(e){var n=e.components,r=Object(o.a)(e,c);return Object(a.b)("wrapper",Object(t.a)({},l,r,{components:n,mdxType:"MDXLayout"}),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"usage: rucio-abacus-rse [-h] [--run-once] [--threads THREADS]\n                        [--enable-history] [--sleep-time SLEEP_TIME]\n\nThe Abacus-RSE daemon is responsible for updating RSE usages. It checks if there are new entries in the UpdatedRSECounter table and updates the RSE counter in the RSECounter table by adding or substrating the amount of files and the size.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --run-once            One iteration only\n  --threads THREADS     Concurrency control: total number of threads on this\n                        process\n  --enable-history      Record RSE usage into history table every hour.\n  --sleep-time SLEEP_TIME\n                        Concurrency control: thread sleep time after each\n                        chunk of work\n\nUpload a file to your RSE::\n\n  $ rucio upload --rse MOCK --scope mock filename.txt\n\nCheck RSE usage::\n\n  $ rucio list-rse-usage MOCK\n  USAGE:\n  ------\n     files: 0\n     used: 0.000 B\n     rse: MOCK\n     updated_at: 2018-11-30 14:28:34\n     source: rucio\n  ------\n\nRun the daemon::\n\n  $ rucio-abacus-rse --run-once\n\nCheck RSE usage again::\n\n  $ rucio list-rse-usage MOCK\n  USAGE:\n  ------\n      files: 1\n      used: 213.481 kB\n      rse: MOCK\n      updated_at: 2018-12-03 08:58:33\n      source: rucio\n  ------\n")))}p.isMDXComponent=!0},457:function(e,n,r){"use strict";r.d(n,"a",(function(){return p})),r.d(n,"b",(function(){return m}));var t=r(0),o=r.n(t);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function c(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?c(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function u(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=o.a.createContext({}),l=function(e){var n=o.a.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},p=function(e){var n=l(e.components);return o.a.createElement(s.Provider,{value:n},e.children)},b="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},f=o.a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,a=e.originalType,c=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),p=l(r),b=t,f=p["".concat(c,".").concat(b)]||p[b]||d[b]||a;return r?o.a.createElement(f,i(i({ref:n},s),{},{components:r})):o.a.createElement(f,i({ref:n},s))}));function m(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var a=r.length,c=new Array(a);c[0]=f;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i[b]="string"==typeof e?e:t,c[1]=i;for(var s=2;s<a;s++)c[s]=r[s];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,r)}f.displayName="MDXCreateElement"}}]);