(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{446:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return O}));var r=n(0),l=n.n(r);function b(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){b(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},b=Object.keys(e);for(r=0;r<b.length;r++)n=b[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(r=0;r<b.length;r++)n=b[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i=l.a.createContext({}),d=function(e){var t=l.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=d(e.components);return l.a.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},s=l.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,b=e.originalType,o=e.parentName,i=c(e,["components","mdxType","originalType","parentName"]),p=d(n),s=r,O=p["".concat(o,".").concat(s)]||p[s]||u[s]||b;return n?l.a.createElement(O,a(a({ref:t},i),{},{components:n})):l.a.createElement(O,a({ref:t},i))}));function O(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var b=n.length,o=new Array(b);o[0]=s;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:r,o[1]=a;for(var i=2;i<b;i++)o[i]=n[i];return l.a.createElement.apply(null,o)}return l.a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},93:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return i})),n.d(t,"default",(function(){return p}));var r=n(3),l=n(7),b=(n(0),n(446)),o=["components"],a={title:"MetaClient"},c={unversionedId:"client_api/metaclient",id:"client_api/metaclient",isDocsHomePage:!1,title:"MetaClient",description:"add\\_key",source:"@site/../docs/client_api/metaclient.md",sourceDirName:"client_api",slug:"/client_api/metaclient",permalink:"/documentation/client_api/metaclient",editUrl:"https://github.com/rucio/documentation/tree/main/docs/../docs/client_api/metaclient.md",version:"current",frontMatter:{title:"MetaClient"},sidebar:"docs",previous:{title:"LockClient",permalink:"/documentation/client_api/lockclient"},next:{title:"PingClient",permalink:"/documentation/client_api/pingclient"}},i=[{value:"add_key",id:"add_key",children:[]},{value:"list_keys",id:"list_keys",children:[]},{value:"list_values",id:"list_values",children:[]},{value:"add_value",id:"add_value",children:[]},{value:"del_value",id:"del_value",children:[]},{value:"del_key",id:"del_key",children:[]},{value:"update_key",id:"update_key",children:[]}],d={toc:i};function p(e){var t=e.components,n=Object(l.a)(e,o);return Object(b.b)("wrapper",Object(r.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(b.b)("h2",{id:"add_key"},"add","_","key"),Object(b.b)("span",{style:{"white-space":"pre"}},Object(b.b)("p",null,"Sends the request to add a new key."),Object(b.b)("table",{style:{border:"none"}},Object(b.b)("tbody",null,Object(b.b)("tr",{style:{border:"none"}},Object(b.b)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Arguments"),":")),Object(b.b)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"key"),": the name for the new key."),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"key_type"),": the type of the key: all(container, dataset, file), collection(dataset or container), file, derived(compute from file for collection)."),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"value_type"),": the type of the value, if defined."),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"value_regexp"),": the regular expression that values should match, if defined."))),Object(b.b)("tr",{style:{border:"none"}},Object(b.b)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Raises"),":")),Object(b.b)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"Duplicate"),": if key already exists."))),Object(b.b)("tr",{style:{border:"none"}},Object(b.b)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns"),":")),Object(b.b)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},Object(b.b)("p",null,"  True if key was created successfully.")))))),Object(b.b)("h2",{id:"list_keys"},"list","_","keys"),Object(b.b)("span",{style:{"white-space":"pre"}},Object(b.b)("p",null,"Sends the request to list all keys."),Object(b.b)("table",{style:{border:"none"}},Object(b.b)("tbody",null,Object(b.b)("tr",{style:{border:"none"}},Object(b.b)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns"),":")),Object(b.b)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},Object(b.b)("p",null,"  a list containing the names of all keys.")))))),Object(b.b)("h2",{id:"list_values"},"list","_","values"),Object(b.b)("span",{style:{"white-space":"pre"}},Object(b.b)("p",null,"Sends the request to list all values for a key."),Object(b.b)("table",{style:{border:"none"}},Object(b.b)("tbody",null,Object(b.b)("tr",{style:{border:"none"}},Object(b.b)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns"),":")),Object(b.b)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},Object(b.b)("p",null,"  a list containing the names of all values for a key.")))))),Object(b.b)("h2",{id:"add_value"},"add","_","value"),Object(b.b)("span",{style:{"white-space":"pre"}},Object(b.b)("p",null,"Sends the request to add a value to a key."),Object(b.b)("table",{style:{border:"none"}},Object(b.b)("tbody",null,Object(b.b)("tr",{style:{border:"none"}},Object(b.b)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Arguments"),":")),Object(b.b)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"key"),": the name for key."),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"value"),": the value."))),Object(b.b)("tr",{style:{border:"none"}},Object(b.b)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Raises"),":")),Object(b.b)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"Duplicate"),": if valid already exists."))),Object(b.b)("tr",{style:{border:"none"}},Object(b.b)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns"),":")),Object(b.b)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},Object(b.b)("p",null,"  True if value was created successfully.")))))),Object(b.b)("h2",{id:"del_value"},"del","_","value"),Object(b.b)("span",{style:{"white-space":"pre"}},Object(b.b)("p",null,"Delete a value for a key."),Object(b.b)("table",{style:{border:"none"}},Object(b.b)("tbody",null,Object(b.b)("tr",{style:{border:"none"}},Object(b.b)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Arguments"),":")),Object(b.b)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"key"),": the name for key."),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"value"),": the value.")))))),Object(b.b)("h2",{id:"del_key"},"del","_","key"),Object(b.b)("span",{style:{"white-space":"pre"}},Object(b.b)("p",null,"Delete an allowed key."),Object(b.b)("table",{style:{border:"none"}},Object(b.b)("tbody",null,Object(b.b)("tr",{style:{border:"none"}},Object(b.b)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Arguments"),":")),Object(b.b)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"key"),": the name for key.")))))),Object(b.b)("h2",{id:"update_key"},"update","_","key"),Object(b.b)("span",{style:{"white-space":"pre"}},Object(b.b)("p",null,"Update a key."),Object(b.b)("table",{style:{border:"none"}},Object(b.b)("tbody",null,Object(b.b)("tr",{style:{border:"none"}},Object(b.b)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Arguments"),":")),Object(b.b)("td",{style:{border:"none",backgroundColor:"white",verticalAlign:"top"}},Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"key"),": the name for key."),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"type_"),": the type of the value, if defined."),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"regexp"),": the regular expression that values should match, if defined.")))))))}p.isMDXComponent=!0}}]);