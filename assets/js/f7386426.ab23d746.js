(window.webpackJsonp=window.webpackJsonp||[]).push([[360],{432:function(e,r,n){"use strict";n.r(r),n.d(r,"frontMatter",(function(){return a})),n.d(r,"metadata",(function(){return u})),n.d(r,"toc",(function(){return l})),n.d(r,"default",(function(){return p}));var t=n(3),o=n(7),c=(n(0),n(451)),i=["components"],a={title:"rucio-conveyor-receiver"},u={unversionedId:"bin/rucio-conveyor-receiver",id:"bin/rucio-conveyor-receiver",isDocsHomePage:!1,title:"rucio-conveyor-receiver",description:"`",source:"@site/../docs/bin/rucio-conveyor-receiver.md",sourceDirName:"bin",slug:"/bin/rucio-conveyor-receiver",permalink:"/documentation/bin/rucio-conveyor-receiver",editUrl:"https://github.com/rucio/documentation/tree/main/docs/../docs/bin/rucio-conveyor-receiver.md",version:"current",frontMatter:{title:"rucio-conveyor-receiver"},sidebar:"docs",previous:{title:"rucio-conveyor-preparer",permalink:"/documentation/bin/rucio-conveyor-preparer"},next:{title:"rucio-conveyor-stager",permalink:"/documentation/bin/rucio-conveyor-stager"}},l=[],s={toc:l};function p(e){var r=e.components,n=Object(o.a)(e,i);return Object(c.b)("wrapper",Object(t.a)({},s,n,{components:r,mdxType:"MDXLayout"}),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre"},"usage: rucio-conveyor-receiver [-h] [--run-once] [--full-mode]\n                               [--total-threads TOTAL_THREADS]\n\nConveyor is a daemon to manage file transfers. The conveyor-receiver is\nsimilar to conveyor-poller, but instead of poll the transfer tool, conveyor-\nreceiver gets knowledge about the state of submitted transfers by listening to\nthe transfer tool messages.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --run-once            One iteration only\n  --full-mode           Full mode to update request state\n  --total-threads TOTAL_THREADS\n                        Concurrency control: total number of threads per\n                        process\n")))}p.isMDXComponent=!0},451:function(e,r,n){"use strict";n.d(r,"a",(function(){return p})),n.d(r,"b",(function(){return y}));var t=n(0),o=n.n(t);function c(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function a(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){c(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function u(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},c=Object.keys(e);for(t=0;t<c.length;t++)n=c[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(t=0;t<c.length;t++)n=c[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),s=function(e){var r=o.a.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):a(a({},r),e)),n},p=function(e){var r=s(e.components);return o.a.createElement(l.Provider,{value:r},e.children)},f={inlineCode:"code",wrapper:function(e){var r=e.children;return o.a.createElement(o.a.Fragment,{},r)}},m=o.a.forwardRef((function(e,r){var n=e.components,t=e.mdxType,c=e.originalType,i=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),p=s(n),m=t,y=p["".concat(i,".").concat(m)]||p[m]||f[m]||c;return n?o.a.createElement(y,a(a({ref:r},l),{},{components:n})):o.a.createElement(y,a({ref:r},l))}));function y(e,r){var n=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var c=n.length,i=new Array(c);i[0]=m;var a={};for(var u in r)hasOwnProperty.call(r,u)&&(a[u]=r[u]);a.originalType=e,a.mdxType="string"==typeof e?e:t,i[1]=a;for(var l=2;l<c;l++)i[l]=n[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);