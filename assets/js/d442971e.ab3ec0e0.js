(window.webpackJsonp=window.webpackJsonp||[]).push([[319],{389:function(e,n,r){"use strict";r.r(n),r.d(n,"frontMatter",(function(){return i})),r.d(n,"metadata",(function(){return a})),r.d(n,"toc",(function(){return u})),r.d(n,"default",(function(){return l}));var t=r(3),o=r(7),c=(r(0),r(457)),s=["components"],i={title:"rucio-storage-consistency-actions"},a={unversionedId:"bin/rucio-storage-consistency-actions",id:"bin/rucio-storage-consistency-actions",isDocsHomePage:!1,title:"rucio-storage-consistency-actions",description:"`",source:"@site/../docs/bin/rucio-storage-consistency-actions.md",sourceDirName:"bin",slug:"/bin/rucio-storage-consistency-actions",permalink:"/documentation/bin/rucio-storage-consistency-actions",editUrl:"https://github.com/rucio/documentation/tree/main/docs/../docs/bin/rucio-storage-consistency-actions.md",version:"current",frontMatter:{title:"rucio-storage-consistency-actions"},sidebar:"docs",previous:{title:"rucio-replica-recoverer",permalink:"/documentation/bin/rucio-replica-recoverer"},next:{title:"rucio-transmogrifier",permalink:"/documentation/bin/rucio-transmogrifier"}},u=[],p={toc:u};function l(e){var n=e.components,r=Object(o.a)(e,s);return Object(c.b)("wrapper",Object(t.a)({},p,r,{components:n,mdxType:"MDXLayout"}),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre"},'usage: rucio-storage-consistency-actions [-h] [--run-once] [--scope SCOPE]\n                                         [--rses RSES [RSES ...]]\n                                         [--sleep-time SLEEP_TIME]\n                                         [--dark-min-age DARK_MIN_AGE]\n                                         [--dark-threshold-percent DARK_THRESHOLD_PERCENT]\n                                         [--miss-threshold-percent MISS_THRESHOLD_PERCENT]\n                                         [--scanner-files-path SCANNER_FILES_PATH]\n                                         [--threads THREADS] [-f]\n\nThe Consistency-Actions daemon is responsible for applying the corrective actions resulting from a consistency-check scan of an RSE.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --run-once            One iteration only\n  --scope SCOPE         Scope of the input files produced by theiCC scanner -\n                        e.g.: "cms"\n  --rses RSES [RSES ...]\n                        RSEs to check, specified as a RSE expression. Defaults\n                        to check all RSEs.\n  --sleep-time SLEEP_TIME\n                        Concurrency control: thread sleep time (in seconds)\n                        after each chunk of work\n  --dark-min-age DARK_MIN_AGE\n                        Min. age (in days) of a file to be considered as DARK.\n  --dark-threshold-percent DARK_THRESHOLD_PERCENT\n                        Max. percentage of dark files at RSE, expressed as\n                        percents - e.g. 1.5 means 1.5%\n  --miss-threshold-percent MISS_THRESHOLD_PERCENT\n                        Max. percentage of missing files at RSE, expressed as\n                        percents - e.g. 1.5 means 1.5%\n  --scanner-files-path SCANNER_FILES_PATH\n                        The path where the CC scanner files are mounted.\n  --threads THREADS     Concurrency control: total number of threads on this\n                        process\n  -f, --force-proceed   Force CC actions, even if number of dark/missing files\n                        over thresholds\n\nRun the daemon::\n  $ rucio-storage-consistency-actions --run-once --scope cms --rses T2_US_Purdue T2_US_Nebraska --dark-threshold-percent 2.0 --miss-threshold-percent 1.5 --scanner-files-path /tmp/consistency-dump --sleep-time 10\n')))}l.isMDXComponent=!0},457:function(e,n,r){"use strict";r.d(n,"a",(function(){return l})),r.d(n,"b",(function(){return y}));var t=r(0),o=r.n(t);function c(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function s(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?s(Object(r),!0).forEach((function(n){c(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function a(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},c=Object.keys(e);for(t=0;t<c.length;t++)r=c[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(t=0;t<c.length;t++)r=c[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=o.a.createContext({}),p=function(e){var n=o.a.useContext(u),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},l=function(e){var n=p(e.components);return o.a.createElement(u.Provider,{value:n},e.children)},f="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},m=o.a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,c=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),l=p(r),f=t,m=l["".concat(s,".").concat(f)]||l[f]||d[f]||c;return r?o.a.createElement(m,i(i({ref:n},u),{},{components:r})):o.a.createElement(m,i({ref:n},u))}));function y(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var c=r.length,s=new Array(c);s[0]=m;var i={};for(var a in n)hasOwnProperty.call(n,a)&&(i[a]=n[a]);i.originalType=e,i[f]="string"==typeof e?e:t,s[1]=i;for(var u=2;u<c;u++)s[u]=r[u];return o.a.createElement.apply(null,s)}return o.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"}}]);